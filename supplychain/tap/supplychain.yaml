#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: #@ data.values.artifactId
spec:
  selector:
    app.tanzu.vmware.com/workload-type: #@ data.values.workloadType
    #@ if data.values.addTesting:
    apps.tanzu.vmware.com/has-tests: 'true'
    #@ end

  resources:
  #@ "# SOURCE PROVIDER"
  - name: source-provider
    params:
    - name: gitImplementation
      value: go-git
    templateRef:
      kind: ClusterSourceTemplate
      name: source-template
  #@ if data.values.addTesting:
   #@ "# SOURCE TESTER"
  - name: source-tester
    sources: 
    - name: source
      resource: source-provider
    templateRef:
      kind: ClusterSourceTemplate
      name: testing-pipeline
  #@ end
  #@ if data.values.addScanning:
  #@ "# SOURCE SCANNER"
  - name: source-scanner
    sources:
    - name: source
      resource: source-tester
    templateRef:
      kind: ClusterSourceTemplate
      name: source-scanner-template
  #@ end
  #@ "# IMAGE BUILDER"
  - name: image-builder
    params:
    - name: clusterBuilder
      value: default
    sources:
    - name: source
      resource: source-scanner
    templateRef:
      kind: ClusterImageTemplate
      name: kpack-template
  #@ if data.values.addScanning:
  #@ "# IMAGE SCANNER"
  - name: image-scanner
    images:
    - name: image
      resource: image-builder
    templateRef:
      kind: ClusterImageTemplate
      name: image-scanner-template
  #@ end
  #@ "# CONVENTIONS"
  - name: config-provider
    images: 
    - name: image
      resource: image-scanner
    templateRef:
      kind: ClusterConfigTemplate
      name: convention-template
   #@ if "tap" in data.values.serviceBinding:
   #@ "# TAP SERVICE CLAIMS BINDING"
  - name: tap-service-claims-binding
    configs:
     - name: config
       resource: config-provider
    templateRef:
      kind: ClusterConfigTemplate
      name: service-claims-binder-template
  #@ end    
   #@ if "externalPrivate" in data.values.serviceBinding:
     #@ "# EXTERNAL PRIVATE BINDING"
  - name: external-private-binding
    configs:
     - name: config
       resource: config-provider
    templateRef:
      kind: ClusterConfigTemplate
      name: external-private-binder-template
  #@ end    
  #@ if "externalPublic" in data.values.serviceBinding:
  #@ "# EXTERNAL PUBLIC BINDING"
  - name: external-public-binding
    configs:
     - name: config
       resource: config-provider
    templateRef:
      kind: ClusterConfigTemplate
      name: external-public-binder-template
  #@ end    
  #@ "# CONFIG WRITER"
  - name: config-writer
    configs:
    - name: config
      resource: app-config
    templateRef:
      kind: ClusterTemplate
      name: config-writer-template
  params:
  - default: main
    name: gitops_branch
  - default: supplychain
    name: gitops_user_name
  - default: supplychain
    name: gitops_user_email
  - default: supplychain@cluster.local
    name: gitops_commit_message
  - default: ''
    name: gitops_ssh_secret
