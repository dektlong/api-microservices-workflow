#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: #@ data.values.artifactId
spec:
  selector:
    app.tanzu.vmware.com/workload-type: #@ data.values.workloadType

  resources:
    - name: 1-APP-SOURCE
      templateRef:
        kind: ClusterSourceTemplate
        name: source-template

    - name: 1-APP-SOURCE-SCAN
      templateRef:
        kind: ClusterSourceTemplate
        name: source-scanning-template
      sources:
        - resource: 1-APP-SOURCE 
          name: source
          
    
    - name: 2-APP-IMAGE
      templateRef:
        kind: ClusterImageTemplate
        name: image-builder-template
      sources:
        - resource: 2-APP-SOURCE-SCAN
          name: scanned-source
          
          
#@ if data.values.scanScope == "srcImg":    
    - name: 2-APP-IMAGE-SCAN
      templateRef:
        kind: ClusterImageTemplate
        name: image-scanning-template
      images:
        - component: 2-APP-IMAGE
          name: image
          
          
#@ end

    - name: 3-APP-CONFIG
      templateRef:
        kind: ClusterConfigTemplate
        name: convention-template
      images:
      #@ if data.values.scanScope == "srcImg":
        - component: 2-APP-IMAGE-SCAN
          name: scanned-image
      #@ else:
        - component: 2-APP-IMAGE
          name: image
      #@ end     
    
    - name: 4-APP-DEPLOY
      templateRef:
        kind: ClusterTemplate
        name: app-deploy-cnr-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
          
      
#@ if hasattr(data.values.serviceBinding, "aws"):
    - name: 5-BIND-AWS-SERVICE
      templateRef:
        kind: ClusterTemplate
        name: aws-service-binder-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end    

#@ if hasattr(data.values.serviceBinding, "azure"):
    - name: 5-BIND-AZURE-SERVICE
      templateRef:
        kind: ClusterTemplate
        name: azure-service-binder-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end

#@ if data.values.serviceBinding.gcp:
    - name: 5-BIND-GCP-SERVICE
      templateRef:
        kind: ClusterTemplate
        name: gcp-service-binder-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end

#@ if hasattr(data.values.serviceBinding, "tanzu"):
    - name: 5-BIND-TANZU-SERVICE
      templateRef:
        kind: ClusterTemplate
        name: tanzu-service-binder-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end    

#@ if hasattr(data.values.testScope, "core"):
    - name: 6-TEST-CORE
      templateRef:
        kind: PipelineTemplate
        name: core-testing-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end  

#@ if hasattr(data.values.testScope, "data"):
    - name: 6-TEST-DATA
      templateRef:
        kind: PipelineTemplate
        name: data-testing-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end  

#@ if hasattr(data.values.testScope, "api"):
    - name: 6-TEST-API
      templateRef:
        kind: PipelineTemplate
        name: api-testing-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end  

#@ if hasattr(data.values.testScope, "stress"):
    - name: 6-TEST-STRESS
      templateRef:
        kind: PipelineTemplate
        name: stress-testing-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end  

#@ if hasattr(data.values.testScope, "pen"):
    - name: 6-TEST-PEN
      templateRef:
        kind: PipelineTemplate
        name: pen-testing-template
      configs:
        - resource: 3-APP-CONFIG
          name: app-config
#@ end  
