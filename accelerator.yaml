accelerator:
  displayName: App Microservice supply-chain
  description: Configure the path-to-production of an application component (microservices)
  iconUrl: https://raw.githubusercontent.com/dektlong/dekt-images/80bfdbf23040731d16310e286e7d40b57e3b23d5/tanzu.png
  tags:
  - cloud-native-secops
  - dekt-demo

  options:
  
 # workload type
    - name: workloadType
      label: Workload type
      #description: Select the workload type for this supply chain
      inputType: select
      defaultValue: web
      choices:
      - value: web
        text: Web frontend
      - value: web-backend
        text: Web backend 
      - value: event-topic
        text: Event topic
    
 #testing phase 
    - name: addTesting
      label: Add functional testing
      inputType: checkbox 
      defaultValue: false
      display: true
      dataType: boolean
    
    - name: testSource
      label: Testing logic source
      #description: Select the source provider of the testing logic
      inputType: select
      defaultValue: app
      dependsOn:
        name: addTesting
        value: true
      choices:
      - value: app
        text: Application source repo (as defined in the workload.yml)
      - value: central
        text: UAT testing framework
      - value: external
        text: External testing framework (must be defined in the pipeline spec)
   
#workloads repos
    #- name: gitRepos
    #  label: Workloads FQDN repos 
    #  description: A separate git repo for every workload in this supply chain type
    #  inputType: multi-text
    #  required: false
    #  dataType: [string]
    #  defaultValue:
    #    - https://github.com/dektlong/workload1

#scanning phase
    - name: addScanning
      label: Add vulnerability scanning
      inputType: checkbox 
      defaultValue: false
      display: true
      dataType: boolean
      
    - name: scanPolicy
      label: Violating severities
     # description: Select what severities will result in scanning failure 
      inputType: checkbox
      dependsOn:
        name: addScanning
        value: true
      dataType: [string]
      defaultValue:
        - Critical
        - High
      choices:
      - value: Low
        text: Low
      - value: Medium
        text: Medium
      - value: High
        text: High
      - value: Critical
        text: Critical
      - value: Negligible
        text: Negligible
      - value: UnknownSeverity
        text: Unknown Severity
               
#data services binding
    - name: addTapBinding
      label: Bind to data services running on TAP clusters (via Services Toolkit)
      inputType: checkbox 
      defaultValue: false
      dataType: boolean
    - name: addExternalBinding
      label: Bind to external data service (e.g. public clouds)
      inputType: checkbox 
      defaultValue: false
      dataType: boolean
    - name: externalBindingTemplate
      label: Name of binding template (required to be applied to the TAP cluster)
      defaultValue: 
        - mytemplate
      dependsOn:
        name: addExternalBinding
        value: true
      
#API-grid configs
   
   #- name: addAPIGrid
    #  label: Add API-grid 
    #  description: Setup custom configurations for API Gateway, Portal and access control
    #  inputType: toggle 
    #  defaultValue: false
    #  display: true
    #  dataType: boolean

   # - name: apiAccess
   #   label: API access level
   #   description: The scope the API access this supplychain enables
   #   inputType: select
   #   dataType: string
   #   defaultValue: dev
     # dependsOn:
     #   name: addAPIGrid
     #   value: true
    #  choices:
    #    - value: dev
    #      text: "Dev gateways in project's domain (team collaboration)"
    #    - value: brownfield
    #      text: "3rd-party & legacy systems approved for this project"
    #    - value: public
    #      text: "Publicly accessible APIs "
#    - name: openAPISources
 #     label: Open api source urls
  #    inputType: multi-text
   #   dataType: [string]
    #  dependsOn:
     #   name: apiAccess
      #  value: 
    #      - brownfield
    #      - public
    #  defaultValue:
    #    - scg-openapi.apps.dekt.io/openapi
    - name: gwSLA
      label: API access boundaries and SLA
      #description: Define micro-GW HA, global filters and API access scope
      inputType: select
      dataType: string
      defaultValue: localdev
     # dependsOn:
     #   name: addAPIGrid
     #   value: true
      choices:
        - value: localdev
          text: "Local development (1 GW, local access only)"
        - value: teamdev
          text: "Team development (2 GWs, team access)"
        - value: integration
          text: "Integration (3 GWs, brownfield access, global rate-limits)"
        - value: production
          text: "Production (4 GWs, brownfield access, global rate-limits and SSO)"
        - value: external
          text: "Public (2 GWs, external access, global rate-limits, SSO and Key Management)"
   # - name: forceRateLimit
   #   label: Rate-limits for all routes
   #   inputType: checkbox 
   #   defaultValue: false
   #   dataType: boolean
      #dependsOn:
      #  name: apiAccess
      #  value: 
      #    - brownfield
   # - name: forceSSO
   #   label: SSO for all routes
   #   inputType: checkbox 
   #   defaultValue: false
   #   dataType: boolean
   #   dependsOn:
   #     name: portalScope
   #     value: 
   #       - brownfield
   #       - public

   # - name: ssoProvider
   #   label: Identity provider for API SSO
   #   description: SSO identity provider
   #   inputType: select 
   #   defaultValue: workspaceOne
      #dependsOn:
      #  name: addAPIGrid
      #  value: true
    #  choices:
     #   - value: amazon
     #     text: Amazon
     #   - value: google
     #     text: Google
     #   - value: okta
     #     text: Okta (Auth0)
     #   - value: microsoft
     #     text: Microsoft
     #   - value: workspaceOne
     #     text: Workspace ONE
    #- name: gwHA
    #  label: Deploy HA micro-gateway
    #  description:  Micro-gateways requires HA deployment 
    #  inputType: checkbox
    #  dataType: boolean
      #dependsOn:
      #  name: addAPIGrid
      #  value: true
    #  defaultValue: false

#disable scale to zero    
    - name: disableScale2Zero
      label: Disable scale to zero  
      inputType: checkbox 
      defaultValue: false
      display: true
      dataType: boolean

#metrics integrations
    
    - name: addObservability
      label: Add Platform Observability   
      inputType: checkbox 
      defaultValue: false
      display: true
      dataType: boolean
      
    - name: scopeTO
      label: Scope of integration with Tanzu Observability
      description: Select scope of integration with with Tanzu Observability (will inject TO proxy into clusters)
      inputType: checkbox
      dataType: [string]
      defaultValue:
        - core
      dependsOn:
        name: addObservability
        value: true
      choices:
        - value: core
          text: Core k8s components
        - value: gw
          text: API Micro-gateways
        - value: jvm
          text: Java runtimes
    - name: gwMetrics
      label: Add Prometheus integration to API Gateway
      description: Add Prometheus integration to API Gateway
      inputType: checkbox
      dataType: boolean
      dependsOn:
        name: addObservability
        value: true
      defaultValue: false
    #- name: vaultIntegration
    #  label: API key management with Vault
    #  inputType: checkbox 
    #  defaultValue: false
    #  dataType: boolean
      #dependsOn:
      #  name: addAPIGrid
      #  value: true
    #- name: apiScorecards
    #  description: URL for API Scorecards dashboard
    #  defaultValue: https://vmware.wavefront.com/u/xNrc03cJ7L?t=vmware
    #  dependsOn:
    #    name: gwMetrics
    #    value: true
    #- name: wavefront
    #  label: Tanzu observability
    #  description:  Add Tanzu observability configuration to gateway
    #  inputType: checkbox
    #  dataType: boolean
    #  defaultValue: true
    #  dependsOn:
    #    name: gwMetrics
    #    value: true
    #- name: prometheus
    #  label: Prometheus service monitor 
    #  description:  Add Prometheus service monitor configuration to gateway
    #  inputType: checkbox
    #  dataType: boolean
    #  defaultValue: false
    #  dependsOn:
    #    name: gwMetrics
    #    value: true
          
 #hidden values
    #- name: domain
    #  label: Domain name
    #  defaultValue: gw.dekt.io
    #  display: false
    #- name: registry
    #  label: Image registry
    #  defaultValue: harbor.apps.cf.tanzutime.com/dekt-apps
    #  display: false
    #- name: workloads
    #  label: Workload names
    #  display: false
    #  inputType: multi-text
    #  dataType: [string]
     # defaultValue:
     #   - backend
     #   - frontend
     #   - adopter-check

engine:
  merge:
    #supplychain
    - includes: [ "supplychain/tap/**" ]
      excludes: [ "supplychain/tap/supplychain-templates/disable-scale2zero.yaml" ]
      #condition: "#supplychain == 'tap'"
      chain:
        - type: YTT
    #- includes: [ "supplychain/k8s/**" ]
    #  condition: "#supplychain == 'k8s'"
    - includes: [ "supplychain/tbs-kpack/**" ]
      condition: "#addTBS"
      chain:
        - type: ReplaceText
          substitutions:
            - text: app-name
              with: "#artifactId"
           # - text: git1
           #   with: "#gitRepos[0]"
           # - text: git2
           #   with: "#gitRepos[1]"
           # - text: git3
           #   with: "#gitRepos[2]"
           # - text: workload1
           #   with: "#workloads[0]"
           # - text: workload2
           #   with: "#workloads[1]"
           # - text: workload3
           #   with: "#workloads[2]"
           # - text: registry
           #   with: "#registry"
    #- includes: [ "supplychain/cf/**" ]
    #  condition: "#supplychain == 'cf'"
    #  chain:
    #    - type: YTT
    
    #disable-scale-zero
    - includes: [ "supplychain/tap/supplychain-templates/disable-scale2zero.yaml" ]
      condition: "#disableScale2Zero"
    #api-grid
    - includes: [ "api-grid/k8s/**" ]
      #condition: "#supplychain != 'cf'"
      chain:
        - type: YTT
    #- includes: [ "api-grid/cf/*.yaml" ]
    #  condition: "#supplychain == 'cf'"
    #  chain:
    #    - type: YTT
    #- includes: [ "api-grid/cf/*.json" ]
    #  condition: "#supplychain == 'cf'"
    #  chain:
    #    - type: ReplaceText
    #      substitutions:
    #        - text: app-name
    #          with: "#artifactId"
    #        - text: domain
    #          with: "#domain"
